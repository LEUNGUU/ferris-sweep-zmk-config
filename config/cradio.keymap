/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};


/ {
    combos {
        compatible = "zmk,combos";
        combo_t {
            timeout-ms = <50>;
	    key-positions = <13 14>;
            bindings = <&kp T>;
            layers = <0>;
        };
        combo_b {
            timeout-ms = <50>;
	    key-positions = <12 13>;
            bindings = <&kp B>;
            layers = <0>;
        };
        combo_y {
            timeout-ms = <50>;
	    key-positions = <16 17>;
            bindings = <&kp Y>;
            layers = <0>;
        };
        combo_n {
            timeout-ms = <50>;
	    key-positions = <17 18>;
            bindings = <&kp N>;
            layers = <0>;
        };
    };
        keymap {
                compatible = "zmk,keymap";
		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &trans				&trans &kp U  &kp I     &kp O   &kp BSPC
		&kp A &kp S &kp D &kp F &kp G				&kp H  &kp J  &kp K     &kp L   &lt 4 P
		&kp Z &kp X &kp C &kp V &trans                          &trans &kp M  &kp COMMA &kp DOT &kp SLASH
	            &mo 1 &mt LSHIFT SPACE                               &kp LCTRL &mo 2
		>;
		};

		left_layer {
		bindings = <
		&kp CARET &kp UNDER  &kp AMPS  &kp PERCENT  &trans		&trans   &trans   &kp SEMI &kp COLON &trans
		&kp EXCL  &kp AT     &kp HASH  &kp DOLLAR   &trans		&kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans
		&trans    &trans     &kp LT    &kp GT       &trans	        &trans   &kp HOME &kp END  &kp QMARK &trans
					    &trans &trans				&kp LC(X) &trans
		>;
		};

		right_layer {
		bindings = <
		&kp ESC   &kp MINUS &kp LPAR  &kp RPAR  &trans			&trans    &kp N7 &kp N8 &kp N9 &trans
		&kp TAB   &kp PIPE  &kp LBRC  &kp RBRC  &kp EQUAL		&kp PLUS  &kp N4 &kp N5 &kp N6 &kp RET
		&kp GRAVE &kp TILDE &kp LBKT  &kp RBKT  &kp BSLH                &kp N0    &kp N1 &kp N2 &kp N3 &kp STAR
					  &kp LGUI &kp LALT				&trans &trans
		>;
		};

		tri_layer {
		bindings = <
		&trans  &kp C_VOL_UP  &kp C_VOL_DN  &trans  &trans             &trans  &trans   &kp C_BRI_UP &kp C_BRI_DN &trans
		&trans  &trans        &trans        &trans  &trans             &trans  &trans   &trans       &trans       &trans
		&trans  &trans        &trans        &trans  &trans             &trans  &trans   &trans       &trans       &trans
					 &trans &trans                             &trans &trans
		>;
		};
		bt {
		bindings = <
		&kp LG(Q)  &kp LG(C) &kp LG(V) &kp LG(R) &trans                 &trans &trans &trans &trans &kp LC(LG(Q))
		&kp LG(A)  &kp LG(S) &kp LG(X) &kp LG(F) &kp LG(LS(N4))         &trans &trans &trans &bt BT_NXT &trans
		&kp LG(Z)  &kp LG(W) &trans    &kp LG(P) &trans			&trans &trans &trans &bt BT_PRV &bt BT_CLR
					 &kp LG(COMMA) &kp LG(SPACE)			&trans &trans
		>;
		};
	};
};
